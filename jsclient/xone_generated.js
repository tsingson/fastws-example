// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var xone = xone || {};

/**
 * @const
 * @namespace
 */
xone.genflat = xone.genflat || {};

/**
 * @constructor
 */
xone.genflat.LoginRequest = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;

    /**
     * @type {number}
     */
    this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xone.genflat.LoginRequest}
 */
xone.genflat.LoginRequest.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xone.genflat.LoginRequest=} obj
 * @returns {xone.genflat.LoginRequest}
 */
xone.genflat.LoginRequest.getRootAsLoginRequest = function (bb, obj) {
    return (obj || new xone.genflat.LoginRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xone.genflat.LoginRequest=} obj
 * @returns {xone.genflat.LoginRequest}
 */
xone.genflat.LoginRequest.getSizePrefixedRootAsLoginRequest = function (bb, obj) {
    return (obj || new xone.genflat.LoginRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
xone.genflat.LoginRequest.prototype.msgID = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xone.genflat.LoginRequest.prototype.username = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xone.genflat.LoginRequest.prototype.password = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xone.genflat.LoginRequest.startLoginRequest = function (builder) {
    builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} msgID
 */
xone.genflat.LoginRequest.addMsgID = function (builder, msgID) {
    builder.addFieldInt32(0, msgID, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} usernameOffset
 */
xone.genflat.LoginRequest.addUsername = function (builder, usernameOffset) {
    builder.addFieldOffset(1, usernameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passwordOffset
 */
xone.genflat.LoginRequest.addPassword = function (builder, passwordOffset) {
    builder.addFieldOffset(2, passwordOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xone.genflat.LoginRequest.endLoginRequest = function (builder) {
    var offset = builder.endObject();
    return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} msgID
 * @param {flatbuffers.Offset} usernameOffset
 * @param {flatbuffers.Offset} passwordOffset
 * @returns {flatbuffers.Offset}
 */
xone.genflat.LoginRequest.createLoginRequest = function (builder, msgID, usernameOffset, passwordOffset) {
    xone.genflat.LoginRequest.startLoginRequest(builder);
    xone.genflat.LoginRequest.addMsgID(builder, msgID);
    xone.genflat.LoginRequest.addUsername(builder, usernameOffset);
    xone.genflat.LoginRequest.addPassword(builder, passwordOffset);
    return xone.genflat.LoginRequest.endLoginRequest(builder);
}

/**
 * @constructor
 */
xone.genflat.LoginResponse = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;

    /**
     * @type {number}
     */
    this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {xone.genflat.LoginResponse}
 */
xone.genflat.LoginResponse.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xone.genflat.LoginResponse=} obj
 * @returns {xone.genflat.LoginResponse}
 */
xone.genflat.LoginResponse.getRootAsLoginResponse = function (bb, obj) {
    return (obj || new xone.genflat.LoginResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {xone.genflat.LoginResponse=} obj
 * @returns {xone.genflat.LoginResponse}
 */
xone.genflat.LoginResponse.getSizePrefixedRootAsLoginResponse = function (bb, obj) {
    return (obj || new xone.genflat.LoginResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
xone.genflat.LoginResponse.prototype.msgID = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 2;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
xone.genflat.LoginResponse.prototype.uid = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
xone.genflat.LoginResponse.startLoginResponse = function (builder) {
    builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} msgID
 */
xone.genflat.LoginResponse.addMsgID = function (builder, msgID) {
    builder.addFieldInt32(0, msgID, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} uidOffset
 */
xone.genflat.LoginResponse.addUid = function (builder, uidOffset) {
    builder.addFieldOffset(1, uidOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
xone.genflat.LoginResponse.endLoginResponse = function (builder) {
    var offset = builder.endObject();
    return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} msgID
 * @param {flatbuffers.Offset} uidOffset
 * @returns {flatbuffers.Offset}
 */
xone.genflat.LoginResponse.createLoginResponse = function (builder, msgID, uidOffset) {
    xone.genflat.LoginResponse.startLoginResponse(builder);
    xone.genflat.LoginResponse.addMsgID(builder, msgID);
    xone.genflat.LoginResponse.addUid(builder, uidOffset);
    return xone.genflat.LoginResponse.endLoginResponse(builder);
}

// Exports for Node.js and RequireJS
this.xone = xone;
